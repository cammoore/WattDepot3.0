//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.13 at 12:12:07 PM HST 
//

package org.wattdepot.datamodel;

import java.io.Serializable;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Protocol"/>
 *         &lt;element ref="{}Type"/>
 *         &lt;element ref="{}Version"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "protocol", "type", "version" })
@XmlRootElement(name = "MeterModel")
public class MeterModel extends DataModel implements Serializable {

  private final static long serialVersionUID = 12343L;
  @XmlElement(name = "Protocol", required = true)
  protected String protocol;
  @XmlElement(name = "Type", required = true)
  protected String type;
  @XmlElement(name = "Version", required = true)
  protected String version;

  /** Default constructor.*/
  public MeterModel() {
    // JAXB needs default constructor.
  }
  
  
  /**
   * @param protocol
   * @param type
   * @param version
   */
  public MeterModel(String protocol, String type, String version) {
    super();
    this.protocol = protocol;
    this.type = type;
    this.version = version;
  }


  /**
   * Gets the value of the protocol property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the protocol property.
   * 
   * @param value
   *          allowed object is {@link String }
   * 
   */
  public void setProtocol(String value) {
    this.protocol = value;
  }

  public boolean isSetProtocol() {
    return (this.protocol != null);
  }

  /**
   * Gets the value of the type property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getType() {
    return type;
  }

  /**
   * Sets the value of the type property.
   * 
   * @param value
   *          allowed object is {@link String }
   * 
   */
  public void setType(String value) {
    this.type = value;
  }

  public boolean isSetType() {
    return (this.type != null);
  }

  /**
   * Gets the value of the version property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getVersion() {
    return version;
  }

  /**
   * Sets the value of the version property.
   * 
   * @param value
   *          allowed object is {@link String }
   * 
   */
  public void setVersion(String value) {
    this.version = value;
  }

  public boolean isSetVersion() {
    return (this.version != null);
  }


  /* (non-Javadoc)
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((protocol == null) ? 0 : protocol.hashCode());
    result = prime * result + ((type == null) ? 0 : type.hashCode());
    result = prime * result + ((version == null) ? 0 : version.hashCode());
    return result;
  }


  /* (non-Javadoc)
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    MeterModel other = (MeterModel) obj;
    if (protocol == null) {
      if (other.protocol != null)
        return false;
    }
    else if (!protocol.equals(other.protocol))
      return false;
    if (type == null) {
      if (other.type != null)
        return false;
    }
    else if (!type.equals(other.type))
      return false;
    if (version == null) {
      if (other.version != null)
        return false;
    }
    else if (!version.equals(other.version))
      return false;
    return true;
  }


  /* (non-Javadoc)
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "MeterModel [protocol=" + protocol + ", type=" + type + ", version=" + version + "]";
  }
}
